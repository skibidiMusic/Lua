-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

local ohTable1 = {
	["Charge"] = 1,
	["Action"] = "Spike",
	["SpecialCharge"] = 0.000004015143783610157,
	["TiltDirection"] = 0, 1, 0,
	["BallId"] = 72746008656,
	["MoveDirection"] = 0, 0, -0,
	["From"] = "Client",
	["HitboxSize"] = 7.5, 8.904999732971191, 6.4710001945495605,
	["LookVector"] = 0.054839685559272766, 1.0703705299874855e-07, 0.9984951615333557
}

game:GetService("ReplicatedStorage").Packages._Index["sleitnick_knit@1.7.0"].knit.Services.BallService.RF.Interact:InvokeServer(ohTable1)

-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

local ohTable1 = {
	["Charge"] = 1,
	["Action"] = "Spike",
	["SpecialCharge"] = 0.024214032922308986,
	["TiltDirection"] = 0, 1, 0,
	["BallId"] = 72746008720,
	["MoveDirection"] = -0, 0, 0,
	["From"] = "Client",
	["HitboxSize"] = 7.5, 8.904999732971191, 6.4710001945495605,
	["LookVector"] = -0.9560953974723816, 5.2511057724302646e-09, 0.29305553436279297
}

game:GetService("ReplicatedStorage").Packages._Index["sleitnick_knit@1.7.0"].knit.Services.BallService.RF.Interact:InvokeServer(ohTable1)

local rem = game:GetService("ReplicatedStorage").Packages._Index["sleitnick_knit@1.7.0"].knit.Services.BallService.RF.Interact
local old ; old = hookmetamethod(game, "__namecall", function(self, ...)
        local args = {...}
        if not checkcaller() and rawequal(self, rem) then
                local t = args[1]
                if typeof(t) == "table" and rawget(t, "Action") == "Spike" then
                        rawset(t, "Charge", 5)
                        rawset(t, "SpecialCharge", 1)
                        rawset(t, "TiltDirection", rawget(t, "TiltDirection") * 10)
                end
        end

        return old(self, unpack(args))
end)

-- Hitbox Expander
local old ; old = hookmetamethod(game, "__namecall", function(self, ...)
        local args = {...}
        if not checkcaller() and rawequal(self, workspace) and getnamecallmethod() == "GetPartsInPart" then
                local hitboxPart = args[1]
                local overlapParams = args[2] :: OverlapParams

                if rawequal(args[3], nil) and (typeof(hitboxPart) == "Instance" and hitboxPart.IsA(hitboxPart, "BasePart") and typeof(overlapParams) == "OverlapParams") then
                        local testPart = overlapParams.FilterDescendantsInstances[1]
                        if testPart and testPart.HasTag(testPart, "Ball") then
                                
                                local oldSize = hitboxPart.Size
                                hitboxPart.Size = oldSize * 5
                                local result = old(self, ...)
                                hitboxPart.Size = oldSize
                                return result

                        end
                end
        end

        return old(self, unpack(args))
end)

-- No Cooldowns
for _, v in getloadedmodules() do
        if v.Name == "GameController" then
                local t = require(v)
                local val = t.IsBusy
                
                val:set(true)
                local old; old = hookfunction(val.set, function(self, ...)
                
                    if not checkcaller() and rawequal(self, val) then
                        return old(self, true)
                    end     
                    return old(self, ...)
                end)
        end
end
    

local rem = game:GetService("ReplicatedStorage").Packages._Index["sleitnick_knit@1.7.0"].knit.Services.BallService.RF.Interact
local old ; old = hookmetamethod(game, "__namecall", function(self, ...)
        local args = {...}
        if true and not checkcaller() and rawequal(self, rem) then
                local t = args[1]
                if typeof(t) == "table" then
                        rawset(t, "Charge", 15)
                        rawset(t, "SpecialCharge", 0.1)
                        print("wsp")
                end
        end

        return old(self, unpack(args))
    end)
